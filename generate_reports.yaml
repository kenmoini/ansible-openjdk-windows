---
- name: Scan for Java JDKs/JREs and generate a report
  hosts: all
  vars:
    fixed_timestamp: "{{ ansible_date_time.epoch }}"
    generated_path: 'C:\Temp\javaReport-{{ fixed_timestamp }}\'
    fetch_reports: true

  tasks:
    - name: Include Variables
      include_vars: vars/main.yaml

    - name: Create temp directory structure
      ansible.windows.win_file:
        path: C:\Temp\
        state: directory

    - name: Create temp directory structure
      ansible.windows.win_file:
        path: "{{ generated_path }}"
        state: directory

    - name: Copy listPackages.ps1 to host
      ansible.windows.win_template:
        src: files/listPackages.ps1
        dest: "{{ generated_path }}listPackages.ps1"

    - name: Pull list of installed packages
      ansible.windows.win_shell: ".\\listPackages.ps1"
      args:
        chdir: "{{ generated_path }}"

    - name: Slurp up the JSON
      slurp:
        src: "{{ generated_path }}detectedJava.json"
      register: detected_java
      ignore_errors: yes

    - name: Set the fact per host
      set_fact:
        detectedJava: "{{ detected_java['content'] | b64decode }}"

#    - name: Debug
#      debug:
#        msg: "{{ detected_java['content'] | b64decode }}"

#    - name: Debug
#      debug:
#        msg: "{{ detectedJava }}"

    - name: Template out the HTML report
      template:
        src: java_consumption_report.html.j2
        dest: "{{ generated_path }}java_consumption_report-{{ fixed_timestamp }}.html"
      run_once: yes

    - name: Zip up the contents of the scan
      ansible.windows.win_shell: "Compress-Archive -Path {{ generated_path }} -DestinationPath C:\\Temp\\javaReport-{{ fixed_timestamp }}.zip"
      run_once: yes

    - name: Remove temporary directory
      ansible.windows.win_file:
        path: "{{ generated_path }}"
        state: absent

    - name: Report generation finished!
      debug:
        msg: "You may find the generated bundle at C:\\Temp\\javaReport-{{ fixed_timestamp }}.zip"
      run_once: yes
      when: not fetch_reports|bool

    - name: Generate local directory for report fetching
      file:
        path: "./.generated"
        state: directory
      delegate_to: localhost
      when: fetch_reports|bool

    - name: Fetch report bundle file
      fetch:
        src: "C:\\Temp\\javaReport-{{ fixed_timestamp }}.zip"
        dest: "./.generated/"
        flat: yes
      when: fetch_reports|bool
      run_once: yes

    - name: Report generation finished!
      debug:
        msg: "You may find the generated bundle at ./.generated/javaReport-{{ fixed_timestamp }}.zip"
      delegate_to: localhost
      run_once: yes
      when: fetch_reports|bool

